apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gradio-llm-rag.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "gradio-llm-rag.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "{{ .Values.argocd.syncWave }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gradio-llm-rag.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gradio-llm-rag.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7860
              protocol: TCP
          env:
            - name: APP_TITLE
              value: "{{ .Values.app.title }}"
            - name: INFERENCE_SERVER_URL
              value: "{{ .Values.llm.inferenceServerUrl }}"
            - name: MODEL_NAME
              value: "{{ .Values.llm.modelName }}"
            - name: DB_CONNECTION_STRING
              value: "{{ .Values.database.connectionString }}"
            - name: DB_COLLECTION_NAME
              value: "{{ .Values.database.collectionName }}"
            - name: MAX_NEW_TOKENS
              value: "{{ .Values.llm.maxNewTokens }}"
            - name: TOP_K
              value: "{{ .Values.llm.topK }}"
            - name: TOP_P
              value: "{{ .Values.llm.topP }}"
            - name: TYPICAL_P
              value: "{{ .Values.llm.typicalP }}"
            - name: TEMPERATURE
              value: "{{ .Values.llm.temperature }}"
            - name: REPETITION_PENALTY
              value: "{{ .Values.llm.repetitionPenalty }}"
            - name: BEARER_TOKEN
              value: "{{ .Values.llm.bearerToken }}"
            - name: ENABLE_DEBUG_UI
              value: "{{ .Values.app.enableDebugUI }}"
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.probes.readiness }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.probes.liveness }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.probes.startup }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }} 